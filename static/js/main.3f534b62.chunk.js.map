{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","components/ContactForm/ContactForm.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactsItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","itemContact","id","shortid","generate","props","addContact","reset","onSubmit","this","className","styles","contactForm","type","onChange","placeholder","Component","ContactsItem","onDelete","item","itemName","onClick","itemBtn","ContactsList","contacts","map","key","Filter","length","filter","App","filteredContacts","contact","toLowerCase","includes","deleteContactById","updatedContacts","alert","newName","trim","localStorage","getItem","JSON","parse","console","log","prevProps","prevState","setItem","stringify","contactsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f534b62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1cHfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3fchc\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const itemContact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(itemContact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter Name...\"\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number:\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter Number...\"\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactsItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.itemName}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete} className={styles.itemBtn}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\n\r\nconst ContactsList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactsItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onDelete={() => onDelete(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ length, filter, handleChange }) => {\r\n  return (\r\n    <>\r\n      {length > 1 && (\r\n        <label>\r\n          Find contacts by name\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter name...\"\r\n          />\r\n        </label>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  length: PropTypes.number.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport styles from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n\r\n    filter: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  filteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  deleteContactById = id => {\r\n    const { contacts } = this.state;\r\n    const updatedContacts = contacts.filter(contact => contact.id !== id);\r\n    this.setState({\r\n      contacts: [...updatedContacts],\r\n    });\r\n  };\r\n\r\n  addContact = contact => {\r\n    if (!contact.name || !contact.number) {\r\n      alert('Enter Name and Number to add contact');\r\n      return false;\r\n    }\r\n    const newName = contact.name;\r\n    const isExistName = this.state.contacts.map(contact =>\r\n      contact.name.toLowerCase(),\r\n    );\r\n    if (isExistName.includes(newName.toLowerCase().trim())) {\r\n      alert(`${newName} already in contacts`);\r\n    } else {\r\n      this.setState(state => ({\r\n        contacts: [...state.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('contacts')) {\r\n      this.setState({\r\n        contacts: [...JSON.parse(localStorage.getItem('contacts'))],\r\n      });\r\n    }\r\n    console.log('DidMount');\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n    console.log('DidUpdate');\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const contactsList = this.filteredContacts();\r\n\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={this.addContact} />\r\n        <h1>Contacts</h1>\r\n        <Filter\r\n          length={contacts.length}\r\n          filter={filter}\r\n          handleChange={this.handleChange}\r\n        />\r\n        <ContactsList\r\n          contacts={contactsList}\r\n          onDelete={this.deleteContactById}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1iRzO\",\"itemName\":\"ContactListItem_itemName__42880\",\"itemBtn\":\"ContactListItem_itemBtn__3nenQ\"};"],"sourceRoot":""}